
global proc string rfxBrowserGetNas()
{
	string $Nas;
	string $os = `about -os`;

	if ($os == "nt")
		$Nas = "//Nas/3DNAS/proyectos/";
	else
		$Nas = "/Nas/3DNAS/proyectos/";

	return $Nas;
}

proc string rfxBrowserGetWorkspace(string $mode)
{
	string $return;
	string $Nas = `rfxBrowserGetNas`;

	string $currentWorkspace = `workspace -q -sn`;
	string $currentWorkspace = `substitute $Nas $currentWorkspace ""`;
	string $tokens[];
	int $numTokens = `tokenize $currentWorkspace "/" $tokens`;

	string $project = $tokens[0];
	string $shot = $tokens[1];

	if ($mode == "project")
		$return = $project;
	if ($mode == "shot")
		$return = $shot;

	return $return;
}

global proc rfxBrowserGetScenes()
{
	string $win = "rfxBrowserWin";
	string $mode = `optionMenu -q -value ($win+"_sortByOM")`;
	string $mode = `tolower $mode`;
	int $showHidden = `menuItem -query -checkBox ($win+"_scenesShowHiddenMI")`;

	string $Nas = `rfxBrowserGetNas`;
	string $projects[] = `textScrollList -query -si ($win+"_projectsTSL")`;
	string $project = $projects[0];
	string $shots[] = `textScrollList -query -si ($win+"_shotsTSL")`;
	string $shot = $shots[0];

	string $path = `textField -q -text ($win+"_pathTF")`;

	textScrollList -edit -removeAll ($win+"_scenesTSL");

	workspace -dir $path;
	projFileViewer -e -displayHidden $showHidden -sb $mode -fr ($win+"_scenesViewer");
	int $ni = `projFileViewer -q -ni ($win+"_scenesViewer")`;
	for ($x=0;$x<$ni;$x++)
	{
		projFileViewer -e -sii $x ($win+"_scenesViewer");
		string $filesListTmp[] = `projFileViewer -q -si ($win+"_scenesViewer")`;
		textScrollList -edit -append $filesListTmp[0] ($win+"_scenesTSL");
	}
	workspace -dir ($Nas+$project+"/"+$shot+"/scenes/");
}

global proc rfxBrowserSelectedScene()
{
	string $win = "rfxBrowserWin";
	string $scenes[] = `textScrollList -query -si ($win+"_scenesTSL")`;
	string $scene = $scenes[0];

	button -e -enable 1 ($win+"_finishB");
	textField -e -fileName $scene ($win+"_fileTF");
}

global proc rfxBrowserGoDOWN()
{
	string $win = "rfxBrowserWin";

	string $getPath = `textField -q -text ($win+"_pathTF")`;
	string $folderName[] = `textScrollList -q -si ($win+"_scenesTSL")`;
	string $newPath = ( $getPath +  $folderName[0] );
	textField -e -tx ( $newPath + "/" ) ($win+"_pathTF");

	rfxBrowserGetScenes;
}

global proc rfxBrowserGoUP()
{
	string $win = "rfxBrowserWin";

	string $getPath = `textField -q -text ($win+"_pathTF")`;
	string $project[];
	tokenize $getPath "/" $project;
	int $size = size($project)-1;
	string $getUpDirectory = $project[$size];
	string $i = $getPath;
 	string $exp = ( $getUpDirectory + "/" );
 	string $result = `substitute $exp $i ""`;
	textField -e -text $result ($win+"_pathTF");

	rfxBrowserGetScenes;
}

global proc rfxBrowserSetRoot()
{
	string $os = `about -os`;
	string $win = "rfxBrowserWin";
	string $root = `optionMenu -q -value ($win+"_pathOM")`;

	switch ($root)
	{
		case "NAS":
			if ($os == "nt")
				$root = "//NAS/";
			else
				$root = "/NAS/";
			break;
		case "HOME":
			if ($os == "nt")
			{
				$root = `getenv("HOME")`;
				$root = ($root+"/");
			}
			else
				$root = "/home/user/";
			break;
		case "/":
			if ($os == "nt")
				$root = "C:/";
			else
				$root = "/";
			break;
		case "CDROM":
			if ($os == "nt")
				$root = "D:/";
			else
				$root = "/media/cdrom/";
			break;
	}

	textField -edit -text $root ($win+"_pathTF");
	rfxBrowserGetScenes;
}

global proc rfxBrowserSetPath()
{
	string $win = "rfxBrowserWin";

	string $Nas = `rfxBrowserGetNas`;
	string $projects[] = `textScrollList -query -si ($win+"_projectsTSL")`;
	string $project = $projects[0];
	string $shots[] = `textScrollList -query -si ($win+"_shotsTSL")`;
	string $shot = $shots[0];

	setProject ($Nas+$project+"/"+$shot);

	textField -edit -text ($Nas+$project+"/"+$shot+"/scenes/") ($win+"_pathTF");
	textField -edit -fileName "" ($win+"_fileTF");
	optionMenu -e -value "NAS" ($win+"_pathOM");
	rfxBrowserGetScenes;
}

global proc rfxBrowserGetShots()
{
	string $win = "rfxBrowserWin";

	string $Nas = `rfxBrowserGetNas`;
	string $projects[] = `textScrollList -query -si ($win+"_projectsTSL")`;
	string $project = $projects[0];

	textScrollList -edit -removeAll ($win+"_shotsTSL");

	string $filesList[] = `getFileList -folder ($Nas+$project+"/")`;
	for ($file in $filesList)
	{
		if ($file != "INTER" && $file != "REF" && $file != "REFS" && `chdir ($Nas+$project+"/"+$file)` == 0)
			textScrollList -edit -append $file ($win+"_shotsTSL");
	}
	textScrollList -edit -sc "rfxBrowserSetPath" ($win+"_shotsTSL");
	textScrollList -edit -removeAll ($win+"_scenesTSL");
	button -e -enable 0 ($win+"_finishB");
	
}

global proc rfxBrowserGetProjects()
{
	string $win = "rfxBrowserWin";

	string $Nas = `rfxBrowserGetNas`;
	string $project = `rfxBrowserGetWorkspace "project"`;

	string $filesList[] = `getFileList -folder $Nas`;
	for ($file in $filesList)
	{
		if (`chdir ($Nas+$file)` == 0)
			textScrollList -edit -append $file ($win+"_projectsTSL");
	}
	textScrollList -edit -sc "rfxBrowserGetShots" ($win+"_projectsTSL");
}

proc rfxBrowserSelectCurrentShot()
{
	string $win = "rfxBrowserWin";

	string $project = `rfxBrowserGetWorkspace "project"`;
	string $shot = `rfxBrowserGetWorkspace "shot"`;

	string $filesList[] = `textScrollList -query -allItems ($win+"_projectsTSL")`;
	for ($file in $filesList)
	{
		if ($file == $project)
			textScrollList -edit -si $project ($win+"_projectsTSL");
	}
	rfxBrowserGetShots;
	
	string $filesList[] = `textScrollList -query -allItems ($win+"_shotsTSL")`;
	for ($file in $filesList)
	{
		if ($file == $shot)
			textScrollList -edit -si $shot ($win+"_shotsTSL");
	}
	rfxBrowserGetScenes;
}

global proc rfxBrowserOpen()
{
	string $os = `about -os`;

	string $win = "rfxBrowserWin";
	string $Nas = `rfxBrowserGetNas`;

	string $scenes[] = `textScrollList -query -si ($win+"_scenesTSL")`;
	string $scene = $scenes[0];
	string $path = `textField -q -text ($win+"_pathTF")`;
	string $openFile = $path+$scene;

	string $getFileExtension[];
	tokenize $scene "." $getFileExtension;
	int $size = size($getFileExtension)-1;
	string $fileExtension = $getFileExtension[$size];
	$fileExtension = `tolower $fileExtension`;

	// Maya File
	if ($fileExtension == "ma" || $fileExtension == "mb")
	{
		deleteUI $win;
		int $opened = `file -q -anyModified`;
		if ($opened == 0)
			file -o $openFile;
		else
		{
			string $currentFile = `file -q -location`;
		 	string $openConfirm = `confirmDialog -title "Save Changes" -message ("Save changes to "+$currentFile+"?") -button "Save" -button "Don't Save" -button "Cancel" -defaultButton "Save" -cancelButton "Cancel" -dismissString "Cancel"`;
			if ($openConfirm == "Don't Save")
				file -force -o $openFile;
			if ($openConfirm == "Save")
			{
				file -save;
				file -o $openFile;
			}
		}	
	}
	else
	{
		// Another File
		if ($fileExtension == "mov" || $fileExtension == "avi" || $fileExtension == "mpg" || $fileExtension == "mpeg" || $fileExtension == "wmv" || $fileExtension == "jpg" || $fileExtension == "sgi" || $fileExtension == "txt" || $fileExtension == "doc")
		{
			if ($os == "nt")
			{
				deleteUI $win;
				string $noNAS = `substitute "//Nas/3DNAS" $path "Z:"`;
				system("cmd /c start \"\" \""+$noNAS+$scene+"\"");
			}
			else
				deleteUI $win;
				system("nohup gnome-open "+$openFile+" &");
		}
		else
		{
			// Folder
			if (`chdir $openFile` == 0)
				rfxBrowserGoDOWN;
			else
				print "There's no program assigned to that file.\n";
		}
	}
}

global proc rfxBrowserFinish(string $mode)
{
	switch ($mode)
	{
		case "open":
			rfxBrowserOpen;
			break;
		case "saveAs":
			$title = "Save Scene As...";
			$titleB = "Save";
			break;
		case "import":
			$title = "Import Scene...";
			$titleB = "Import";
			break;
		case "exportAll":
			$title = "Export All...";
			$title = "Save";
			break;
		case "exportSelection":
			$title = "Export Selection...";
			$title = "Save";
			break;
	}

}

//============================== MAIN WINDOW ==============================//
global proc rfxBrowser (string $mode)
{
	// variables
	string $myScriptDir = `internalVar -userScriptDir`;
	global string $myBitmapDir;
	$myBitmapDir = `internalVar -userScriptDir`;

	string $title;
	string $titleB;
	int $enable = 1;
	switch ($mode)
	{
		case "open":
			$title = "Open Scene...";
			$titleB = "Open";
			$enable = 0;
			break;
		case "saveAs":
			$title = "Save Scene As...";
			$titleB = "Save";
			break;
		case "import":
			$title = "Import Scene...";
			$titleB = "Import";
			break;
		case "exportAll":
			$title = "Export All...";
			$title = "Save";
			break;
		case "exportSelection":
			$title = "Export Selection...";
			$title = "Save";
			break;
	}

	// crear window
	string $win = "rfxBrowserWin";
	if (`window -exists $win`)
		deleteUI $win;

	// windowPref -ra; 
	window -rtf true -title $title $win;

	string $mainFL = `formLayout -h 300 -w 700`;

	//
	string $projectsFL = `frameLayout -label "PROJECTS:" -labelAlign "bottom" -borderStyle "etchedIn" ($win+"_projectsFL")`;
		//string $projectsT = `text -label "PROJECTS:" ($win+"_projectsT")`;
		string $projectsTSL = `textScrollList -h 200 -allowMultiSelection false -parent $projectsFL ($win+"_projectsTSL")`;
	
	setParent $mainFL;
	string $shotsFL = `frameLayout -label "SHOTS:" -labelAlign "bottom" -borderStyle "etchedIn" ($win+"_shotsFL")`;
		//string $shotsT = `text -label "SHOTS:" ($win+"_shotsT")`;
		string $shotsTSL = `textScrollList -h 200 -allowMultiSelection false -parent $shotsFL ($win+"_shotsTSL")`;
	
	setParent $mainFL;
	string $scenesViewer = `projFileViewer -w 1 -h 1 -visible 0 -dm 0 -fr ($win+"_scenesViewer")`;
	string $scenesFL = `frameLayout -label "SCENES:" -labelAlign "bottom" -borderStyle "etchedIn" ($win+"_scenesFL")`;
		//string $scenesT = `text -label "SCENES:" ($win+"_scenesT")`;
		string $scenesTSL = `textScrollList -h 200 -allowMultiSelection false -sc "rfxBrowserSelectedScene;" -dcc ("rfxBrowserFinish "+$mode+";") -parent $scenesFL ($win+"_scenesTSL")`;
			string $scenesPM = `popupMenu -button 3 -parent $scenesTSL ($win+"_scenesPM")`;
				string $scenesRenameMI = `menuItem -label "Rename..." -parent $scenesPM ($win+"_scenesRenameMI")`;
				string $scenesDeleteMI = `menuItem -label "Delete..." -parent $scenesPM ($win+"_scenesDeleteMI")`;
				string $scenesDividerMI = `menuItem -divider 1 -parent $scenesPM ($win+"_scenesDividerMI")`;
				string $scenesShowHiddenMI = `menuItem -checkBox 0 -label "Show Hidden" -c "rfxBrowserGetScenes;" -parent $scenesPM ($win+"_scenesShowHiddenMI")`;
	
	// SortBY
	setParent $mainFL;
	string $sortByRL = `rowLayout -numberOfColumns 2 -columnWidth 1 50 -columnAlign 1 "right" -columnAttach 1 "right" 1 -rowAttach 1 "both" 0 ($win+"_sortByRL")`;
		string $sortByT = `text -label "Sort by:" ($win+"_sortByT")`;
		string $sortByOM = `optionMenu -changeCommand "rfxBrowserGetScenes;" -ann "Select SortBy" ($win+"_sortByOM")`;
			string $sortByNameMI = `menuItem -label "Name" -parent $sortByOM ($win+"_sortByNameMI")`;
			string $sortByDateMI = `menuItem -label "Date" -parent $sortByOM ($win+"_sortByDateMI")`;
			string $sortBySizeMI = `menuItem -label "Size" -parent $sortByOM ($win+"_sortBySizeMI")`;

	// Path
	setParent $mainFL;
	string $pathRCL = `rowColumnLayout -numberOfRows 1 -rowHeight 1 32 -rowSpacing 1 1 -rowAttach 1 "both" 0 -columnAttach 1 "both" 0 ($win+"_pathRCL")`;
		string $pathT = `text -label "Path:" ($win+"_pathT")`;
		string $pathOM = `optionMenu -changeCommand "rfxBrowserSetRoot;" ($win+"_pathOM")`;
			string $pathNasMI = `menuItem -label "NAS" -parent $pathOM ($win+"_pathNasMI")`;
			string $pathHomeMI = `menuItem -label "HOME" -parent $pathOM ($win+"_pathHomeMI")`;
			string $pathRootMI = `menuItem -label "/" -parent $pathOM ($win+"_pathRootMI")`;
			string $pathCdromMI = `menuItem -label "CDROM" -parent $pathOM ($win+"_pathCdromMI")`;
		string $upB = `button -w 50 -label "UP" -c "rfxBrowserGoUP;" ($win+"_upB")`;

	// fileField
	setParent $mainFL;
	string $fileRCL = `rowColumnLayout -numberOfRows 1 ($win+"_fileRCL")`;
		string $fileT = `text -label "File:" ($win+"_fileT")`;
		string $fileTF = `textField -enable $enable -w 200 ($win+"_fileTF")`;

	// PathTF
	setParent $mainFL;
	string $pathTF = `textField -changeCommand "rfxBrowserGetScenes;" ($win+"_pathTF")`;	

    	// The buttons
	setParent $mainFL;
	string $cancelB = `button -w 72 -label "Cancel" -c "deleteUI rfxBrowserWin;" ($win+"_cancelB")`;
	string $finishB = `button -w 72 -enable 0 -label $titleB -c ("rfxBrowserFinish "+$mode+";") ($win+"_finishB")`;
	
	formLayout -edit
		-attachForm	$projectsFL	"top"		5
		-attachForm	$projectsFL	"left"		5
		-attachPosition	$projectsFL	"right"		0	20
		-attachControl	$projectsFL	"bottom"	5	$sortByRL
		-attachForm	$shotsFL	"top"		5
		-attachControl	$shotsFL	"left"		5	$projectsFL
		-attachPosition	$shotsFL	"right"		0	44
		-attachControl	$shotsFL	"bottom"	5	$sortByRL
		-attachForm	$scenesFL	"top"		5
		-attachControl	$scenesFL	"left"		5	$shotsFL
		-attachForm	$scenesFL	"right"		5
		-attachControl	$scenesFL	"bottom"	5	$sortByRL
		-attachForm	$pathRCL	"left"		5
		-attachControl	$pathRCL	"top"		5	$projectsFL
		-attachControl	$pathTF		"top"		5	$projectsFL
		-attachControl	$pathTF		"left"		2	$pathRCL
		-attachControl	$pathTF		"right"		5	$fileRCL
		-attachControl	$fileRCL	"top"		5	$projectsFL
		-attachControl	$fileRCL	"right"		5	$sortByRL
		-attachForm	$sortByRL	"right"		5
		-attachControl	$sortByRL	"bottom"	5	$cancelB
		-attachForm	$cancelB	"right"		5
		-attachForm	$cancelB	"bottom"	5
		-attachForm	$finishB	"bottom"	5
		-attachControl	$finishB	"right"		12	$cancelB
		$mainFL;

	rfxBrowserGetProjects();
	rfxBrowserSelectCurrentShot();
	rfxBrowserSetPath;

	//mostrar window
	showWindow $win;

	int $pathHeightRCL = `rowLayout -q -height ($win+"_sortByRL")`;
	rowColumnLayout -e -rowHeight 1 $pathHeightRCL ($win+"_pathRCL");

	int $fileHeightTF = `textField -q -height ($win+"_fileTF")`;
	textField -e -height $fileHeightTF ($win+"_pathTF");
}




/*
PARA USAR UNA VEZ ACABADO EL SCRIPT

// Query the command of the OpenScene in the File Menu to edit later
menuItem -q -command openProject;


// Get the command name asign to CTRL+O Hotkey
string $nameCommand = `hotkey -query -name -ctl o`;
// Edit the command for OpenScene Hokey
inameCommand -c `menuItem -q -command openProject` -ann "Open Scene: Open a scene" $nameCommand;




// Get an array with all the files sortBy what we want
	window -rtf 0 -wh 150 150 ProjWindow;
	paneLayout ProjPanes;
	projFileViewer -dm 0 ProjFileView;
	paneLayout -e -cn single -sp ProjFileView 1 ProjPanes;
	projFileViewer -e -fr ProjFileView;
	showWindow; 
workspace -dir "/home/lichiman/maya/projects/default/"

projFileViewer -q -si ProjFileView;
projFileViewer -e -sii 5 ProjFileView;
projFileViewer -e -sb date -fr ProjFileView;

string $fileList[];
int $ni = `projFileViewer -q -ni ProjFileView`;
for ($x=0;$x<$ni;$x++)
{
	projFileViewer -e -sii $x ProjFileView;
	string $fileListTmp[] = `projFileViewer -q -si ProjFileView`;
	$fileList[$x] = $fileListTmp[0];
}
print $fileList;
*/
